{"version":3,"sources":["../../../src/Utils/CreatePools.ts"],"sourcesContent":["import mysql from \"mysql2/promise\"\r\nimport { Request,Response,NextFunction } from \"express\";\r\nimport dotenv  from \"dotenv\"\r\nimport { setupDatabase } from \"src/setupDatabase\";\r\nimport  ReadLine  from \"readline\";\r\nimport  fs from \"fs\";\r\n// Create a connection pool\r\nconst rl = ReadLine.createInterface({\r\n  input: process.stdin,\r\n  output: process.stdout,\r\n});\r\ninterface IEnvData {\r\n    host?:string,\r\n    user?:string,\r\n    password?:string\r\n}\r\nconst envData:IEnvData = {};\r\n\r\nfunction writeEnvFile() {\r\n  const envContent = `HOST=${envData.host}\\nUSER=${envData.user}\\nPASSWORD=${envData.password}`;\r\n  fs.writeFile('.env', envContent, (err) => {\r\n    if (err) {\r\n      console.error('Error writing to .env file:', err);\r\n      process.exit(1);\r\n    } else {\r\n      console.log(`Successfully wrote ${envData.host}, ${envData.user}, and ${envData.password} to .env file.`);\r\n      process.exit(0);\r\n    }\r\n  });\r\n}\r\n\r\n\r\ndotenv.config()\r\nconst HOST = process.env.HOST \r\nconst USER = process.env.USER\r\nconst PASS = process.env.PASS\r\nif(HOST===undefined||USER===undefined||PASS===undefined){\r\n  rl.question('Enter the host: ', (host) => {\r\n    envData.host = host;\r\n    rl.question('Enter the username: ', (user) => {\r\n      envData.user = user;\r\n      rl.question('Enter the password: ', (password) => {\r\n        envData.password = password;\r\n        rl.close();\r\n        writeEnvFile();\r\n      });\r\n    });\r\n  });\r\n\r\n\r\n}\r\nlet conn;\r\ntry{\r\n  conn = mysql.createPool({\r\n    connectionLimit: 10,\r\n    host: HOST,\r\n    user: USER,\r\n    password: PASS,\r\n  });\r\n  await setupDatabase(await conn.getConnection())\r\n}\r\ncatch(e){\r\n  throw {error:\"Failed To create Pool to DB Please Check you're username and password\"}\r\n}\r\nexport const getConnection = async(req:Request, res:Response, next:NextFunction)=>{\r\n      // Use the connection pool to get a connection\r\n      try{\r\n        const connection =await conn.getConnection();\r\n        req.conn= connection\r\n        next()\r\n      }\r\n      catch{\r\n        throw {\"err\":\"Could not create the connection\"}\r\n      }\r\n}"],"names":["mysql","dotenv","setupDatabase","ReadLine","fs","rl","createInterface","input","process","stdin","output","stdout","envData","writeEnvFile","envContent","host","user","password","writeFile","err","console","error","exit","log","config","HOST","env","USER","PASS","undefined","question","close","conn","createPool","connectionLimit","getConnection","e","req","res","next","connection"],"rangeMappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;","mappings":"AAAA,OAAOA,WAAW,iBAAgB;AAElC,OAAOC,YAAa,SAAQ;AAC5B,SAASC,aAAa,QAAQ,sBAAoB;AAClD,OAAQC,cAAe,WAAW;AAClC,OAAQC,QAAQ,KAAK;AACrB,2BAA2B;AAC3B,MAAMC,KAAKF,SAASG,eAAe,CAAC;IAClCC,OAAOC,QAAQC,KAAK;IACpBC,QAAQF,QAAQG,MAAM;AACxB;AAMA,MAAMC,UAAmB,CAAC;AAE1B,SAASC;IACP,MAAMC,aAAa,CAAC,KAAK,EAAEF,QAAQG,IAAI,CAAC,OAAO,EAAEH,QAAQI,IAAI,CAAC,WAAW,EAAEJ,QAAQK,QAAQ,CAAC,CAAC;IAC7Fb,GAAGc,SAAS,CAAC,QAAQJ,YAAY,CAACK;QAChC,IAAIA,KAAK;YACPC,QAAQC,KAAK,CAAC,+BAA+BF;YAC7CX,QAAQc,IAAI,CAAC;QACf,OAAO;YACLF,QAAQG,GAAG,CAAC,CAAC,mBAAmB,EAAEX,QAAQG,IAAI,CAAC,EAAE,EAAEH,QAAQI,IAAI,CAAC,MAAM,EAAEJ,QAAQK,QAAQ,CAAC,cAAc,CAAC;YACxGT,QAAQc,IAAI,CAAC;QACf;IACF;AACF;AAGArB,OAAOuB,MAAM;AACb,MAAMC,OAAOjB,QAAQkB,GAAG,CAACD,IAAI;AAC7B,MAAME,OAAOnB,QAAQkB,GAAG,CAACC,IAAI;AAC7B,MAAMC,OAAOpB,QAAQkB,GAAG,CAACE,IAAI;AAC7B,IAAGH,SAAOI,aAAWF,SAAOE,aAAWD,SAAOC,WAAU;IACtDxB,GAAGyB,QAAQ,CAAC,oBAAoB,CAACf;QAC/BH,QAAQG,IAAI,GAAGA;QACfV,GAAGyB,QAAQ,CAAC,wBAAwB,CAACd;YACnCJ,QAAQI,IAAI,GAAGA;YACfX,GAAGyB,QAAQ,CAAC,wBAAwB,CAACb;gBACnCL,QAAQK,QAAQ,GAAGA;gBACnBZ,GAAG0B,KAAK;gBACRlB;YACF;QACF;IACF;AAGF;AACA,IAAImB;AACJ,IAAG;IACDA,OAAOhC,MAAMiC,UAAU,CAAC;QACtBC,iBAAiB;QACjBnB,MAAMU;QACNT,MAAMW;QACNV,UAAUW;IACZ;IACA,MAAM1B,cAAc,MAAM8B,KAAKG,aAAa;AAC9C,EACA,OAAMC,GAAE;IACN,MAAM;QAACf,OAAM;IAAuE;AACtF;AACA,OAAO,MAAMc,gBAAgB,OAAME,KAAaC,KAAcC;IACxD,8CAA8C;IAC9C,IAAG;QACD,MAAMC,aAAY,MAAMR,KAAKG,aAAa;QAC1CE,IAAIL,IAAI,GAAEQ;QACVD;IACF,EACA,OAAK;QACH,MAAM;YAAC,OAAM;QAAiC;IAChD;AACN,EAAC"}